{"version":3,"sources":["component/helper.js","component/user/User.js","component/generatorAvatar.js","component/comment/Comment.js","component/commentList/CommentList.js","component/post/Post.js","component/postList/PostList.js","App.js","index.js"],"names":["fetching","url","fetch","then","response","json","User","_ref","name","generatorAvatar","num","Math","ceil","random","Comment","body","email","react_default","a","createElement","Fragment","CommentList","comment","className","src","alt","comment_Comment","propType","PropTypes","arrayOf","object","isRequired","Post","table","user_User","user","title","comments","map","item","commentList_CommentList","key","id","PostList","state","search","filterOfPosts","e","_this","setState","target","value","_this2","this","filteredPosts","props","filter","post","includes","type","placeholder","onChange","post_Post","Component","App","loading","postList","loadPostList","_callee","regenerator_default","wrap","_context","prev","next","Promise","all","_ref2","_ref3","Object","slicedToArray","userList","postsList","commentsList","List","_objectSpread","find","userId","postId","stop","_this$state","length","postList_PostList","onClick","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.5fdeb599.chunk.js","sourcesContent":["function loadUsers() {\n  return fetching('https://jsonplaceholder.typicode.com/users');\n}\n\nfunction loadPosts() {\n  return fetching('https://jsonplaceholder.typicode.com/posts');\n}\n\nfunction loadComments() {\n  return fetching('https://jsonplaceholder.typicode.com/comments');\n}\n\nfunction fetching(url) {\n  return fetch(url)\n    .then(response => response.json());\n}\n\nexport { loadUsers, loadPosts, loadComments };\n","function User({ name }) {\n  return (\n    name\n  );\n}\n\nexport default User;\n","export function generatorAvatar() {\n  let num = Math.ceil(Math.random() * 4);\n  const baseUrl = 'https://semantic-ui.com/images/avatar2/large/';\n\n  switch (num) {\n    case 1:\n      num = 'kristy.png';\n      break;\n    case 2:\n      num = 'matthew.png';\n      break;\n    case 3:\n      num = 'molly.png';\n      break;\n    default:\n      num = 'elyse.png';\n      break;\n  }\n\n  return baseUrl + num;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Comment({ body, email }) {\n  return (\n    <>\n      {body}\n      <br />\n      {email}\n    </>\n  );\n}\n\nComment.propTypes = {\n  body: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from '../comment/Comment';\nimport { generatorAvatar } from '../generatorAvatar';\nimport './CommentList.css';\n\nfunction CommentList({ comment }) {\n  return (\n    <section className=\"ui comments\">\n      <article className=\"comment\">\n        <div className=\"avatar\">\n          <img src={generatorAvatar()} alt=\"avatar\" />\n        </div>\n        <div className=\"content\">\n          <div>\n            <p className=\"text\">\n              <Comment body={comment.body} email={comment.email} />\n            </p>\n          </div>\n        </div>\n      </article>\n    </section>\n  );\n}\n\nCommentList.propType = {\n  comment: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport User from '../user/User';\nimport { generatorAvatar } from '../generatorAvatar';\nimport CommentList from '../commentList/CommentList';\nimport './Post.css';\n\nfunction Post({ table }) {\n  return (\n    <>\n      <div className=\"ui card\">\n        <div className=\"content\">\n          <img className=\"ui avatar image\" src={generatorAvatar()} alt=\"ava\" />\n          <User name={table.user.name} />\n        </div>\n        <div className=\"image\">\n          <img alt=\"ava\" src={generatorAvatar()} />\n        </div>\n        <p>{table.title}</p>\n        <div className=\"content\">{table.body}</div>\n      </div>\n      {table.comments.map(item => <CommentList key={item.id} comment={item} />)}\n    </>\n  );\n}\n\nPost.propTypes = {\n  table: PropTypes.shape({\n    title: PropTypes.string,\n    body: PropTypes.string,\n    user: PropTypes.object,\n    comments: PropTypes.arrayOf(PropTypes.object),\n  }).isRequired,\n};\n\nexport default Post;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Post from '../post/Post';\n\nclass PostList extends Component {\n  state = {\n    search: '',\n  }\n\n  filterOfPosts = (e) => {\n    this.setState({\n      search: e.target.value,\n    });\n  }\n\n  render() {\n    const filteredPosts = this.props.table\n      .filter(post => post.title.includes(this.state.search)\n        || post.body.includes(this.state.search));\n\n    return (\n      <>\n        <input\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"SEARCH HERE\"\n          onChange={this.filterOfPosts}\n        />\n        {filteredPosts.map(item => <Post key={item.id} table={item} />)}\n      </>\n    );\n  }\n}\n\nPostList.propTypes = {\n  table: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n\nexport default PostList;\n","import React, { Component } from 'react';\nimport './App.css';\nimport { loadUsers, loadPosts, loadComments } from './component/helper';\nimport PostList from './component/postList/PostList';\n\nclass App extends Component {\n  state = {\n    loading: false,\n    postList: [],\n  }\n\n  loadPostList = async() => {\n    this.setState({\n      loading: true,\n    });\n\n    Promise.all([loadUsers(), loadPosts(), loadComments()])\n      .then(([userList, postsList, commentsList]) => {\n        const List = postsList.map(post => ({\n          ...post,\n          user: userList.find(item => item.id === post.userId),\n          comments: commentsList.filter(comment => comment.postId === post.id),\n        }));\n\n        this.setState({ postList: List });\n      });\n  }\n\n  render() {\n    const { loading, postList } = this.state;\n\n    if (!postList.length) {\n      if (loading) {\n        return `Loading...`;\n      }\n\n      return (\n        <button\n          type=\"button\"\n          className=\"ui labeled icon button\"\n          onClick={this.loadPostList}\n        >\n          <i className=\"right arrow icon\" />\n          Load Posts\n        </button>\n      );\n    }\n\n    return (\n      <PostList table={this.state.postList} />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}